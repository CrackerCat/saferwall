################################
# STEP 1 build executable binary
################################

FROM golang:1.15-alpine AS builder

# Install git + SSL ca certificates.
# Git is required for fetching the dependencies.
# Ca-certificates is required to call HTTPS endpoints.
RUN apk update && apk add --no-cache git ca-certificates tzdata \
    && update-ca-certificates 2>/dev/null || true

WORKDIR $GOPATH/src/saferwall/eset/

# Copy go mod and sum files.
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy our go files.
COPY . .

# Build the binary.
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \ 
    go build -a -installsuffix cgo -ldflags '-extldflags "-static"' \
     -o /go/bin/esetscanner pkg/grpc/multiav/eset/server/main.go

############################
# STEP 2 build a small image
############################

FROM saferwall/eset:0.0.3
LABEL maintainer="https://github.com/saferwall"
LABEL version="0.0.3"
LABEL description="ESET File Server Security for Linux in a docker container"

# Environment variables.
ENV ESET_SVC /opt/eset/efs/sbin/startd
ENV ESET_UPD_UTILITY /opt/eset/efs/bin/upd
ENV ESET_SCANNER /opt/eset/efs/sbin/cls/cls
ENV ESET_DB_UPDATE_DATE	/av_db_update_date.txt

# Update & test detection.
RUN $ESET_SVC --daemonize \
	&& sleep 3s \
	&& echo "Updating ..." \ 
	&& $ESET_UPD_UTILITY --update --accept-license \
	&& echo -n "$(date +%s)" >> $ESET_DB_UPDATE_DATE \
	&& echo "Scanning eicar ..." \ 
	&& $ESET_SCANNER --clean-mode=NONE /root/eicar | grep -q 'Eicar test file'

# Copy our binary.
COPY --from=builder /go/bin/esetscanner /bin/esetscanner

# Create an app user so our program doesn't run as root.
RUN groupadd -r saferwall \
	&& useradd --no-log-init -r -g saferwall saferwall

# Update permissions.
RUN usermod -u 103 Debian-exim \
	&& groupmod -g 103 Debian-exim \
	&& groupmod -g 104 crontab \
	&& usermod -u 101 saferwall \
	&& groupmod -g 102 saferwall

# Switch to our user.
USER saferwall

ENTRYPOINT ["/bin/esetscanner"]
