################################
# STEP 1 build executable binary
################################

FROM golang:1.16-stretch AS builder

WORKDIR /saferwall

####### Installing Capstone #######
RUN echo "Installing Capstone..." \
    && apt-get update \
	&& apt-get install libcapstone-dev -y

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies.
# Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# Build the binary.
RUN GOOS=linux GOARCH=amd64 go build -a -installsuffix \
	cgo -ldflags '-extldflags "-static"' -o /go/bin/consumer \
	pkg/consumer/cmd/consumer.go

############################
# STEP 2 build a small image
############################
FROM saferwall/consumer:latest
LABEL maintainer="https://github.com/saferwall"
LABEL version="1.0.0"
LABEL description="saferwall NSQ consumer go pkg"

WORKDIR /consumer

# Copy our static executable.
COPY --from=builder /go/bin/consumer .

# Copy the dev config to use in docker-compose.
COPY pkg/consumer/configs/dev.toml configs/dev.toml

# Create an app user so our program doesn't run as root.
RUN groupadd -r saferwall \
	&& useradd --no-log-init -r -g saferwall saferwall

# Update permissions.
RUN chown -R saferwall:saferwall . \
	&& chmod +x consumer \
	&& usermod -u 101 saferwall \
	&& groupmod -g 102 saferwall \
	&& chown -R saferwall:saferwall $DIE_DIR \
	&& chown -R saferwall:saferwall $YARA_RULES_DIR \
	&& chown -R saferwall:saferwall configs/

# Cleanup.
RUN rm -rf /tmp/* \
	&& rm -rf /var/lib/apt/lists/*

# Switch to our user.
USER saferwall

ENTRYPOINT ["./consumer"]