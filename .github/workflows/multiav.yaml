name: Update AV Programs

on:
  schedule:
  - cron: "0 0 1 * *"

jobs:
  
  avast:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release Avast docker image.
        run: make multiav-release-av AV_VENDOR=avast

  avira:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release Avira docker image.
        run: make multiav-release-av AV_VENDOR=avira

  bitdefender:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) Bitdefender docker image
        run: make multiav-release-av AV_VENDOR=bitdefender

  clamav:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release ClamAV docker image.
        run: make multiav-release-av AV_VENDOR=clamav

  comodo:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release COMODO docker image.
        run: make multiav-release-av AV_VENDOR=comodo

  drweb:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release DrWeb docker image.
        run: make multiav-release-av AV_VENDOR=drweb

  eset:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release ESET docker image.
        run: make multiav-release-av AV_VENDOR=eset

  fsecure:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release FSecure docker image.
        run: make multiav-release-av AV_VENDOR=fsecure

  kaspersky:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release Kaspersky docker image.
        run: make multiav-release-av AV_VENDOR=kaspersky

  mcafee:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release McAfee docker image.
        run: make multiav-release-av AV_VENDOR=mcafee

  sophos:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release Sophos docker image.
        run: make multiav-release-av AV_VENDOR=sophos

  symantec:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release Symantec docker image.
        run: make multiav-release-av AV_VENDOR=symantec

  trendmicro:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release TrendMicro docker image.
        run: make multiav-release-av AV_VENDOR=trendmicro

  windefender:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release Windows-Defender docker image.
        run: make multiav-release-av AV_VENDOR=windefender
