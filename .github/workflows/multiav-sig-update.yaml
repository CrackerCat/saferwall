name: Update AntiVirus Signatures

on:
  schedule:
    - cron: "0 0 * * *"

jobs:
  update-goclamav:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) ClamAV docker image
        run: make multiav-release-av-go AV_VENDOR=clamav
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-goavira:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) Avira docker image
        run: make multiav-release-av-go AV_VENDOR=avira
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-gocomodo:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) COMODO docker image
        run: make multiav-release-av-go AV_VENDOR=comodo
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-godrweb:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) DrWeb docker image
        run: make multiav-release-av-go AV_VENDOR=drweb
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-gofsecure:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) FSecure docker image
        run: make multiav-release-av-go AV_VENDOR=fsecure
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-gobitdefender:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) Bitdefender docker image
        run: make multiav-release-av-go AV_VENDOR=bitdefender
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-goeset:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) ESET docker image
        run: make multiav-release-av-go AV_VENDOR=eset
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-goavast:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) Avast docker image
        run: make multiav-release-av-go AV_VENDOR=avast
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-gosymantec:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) Symantec docker image
        run: make multiav-release-av-go AV_VENDOR=symantec
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-gomcafee:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) McAfee docker image
        run: make multiav-release-av-go AV_VENDOR=mcafee
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-gokaspersky:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) Kaspersky docker image
        run: make multiav-release-av-go AV_VENDOR=kaspersky
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-gosophos:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) Sophos docker image
        run: make multiav-release-av-go AV_VENDOR=sophos
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-gotrendmicro:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) TrendMicro docker image
        run: make multiav-release-av-go AV_VENDOR=trendmicro
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}

  update-gowindefender:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build and Release (go) Windows Defender docker image
        run: make multiav-release-av-go AV_VENDOR=windefender
        env:
          DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}
