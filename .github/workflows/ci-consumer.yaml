name: Consumer Go Module
on:
  push:
    paths:
      - "pkg/consumer/**"
  pull_request:
    paths:
      - "pkg/consumer/**"
jobs:
  test:
    name: Build & Test Go package
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: |
          sudo apt-get install libcapstone-dev -y
          go version
          go get -u golang.org/x/lint/golint

      - name: Build
        run: |
          cd pkg/consumer
          go build -v ./...

      - name: Test With Coverage
        run: |
          cd pkg/consumer
          go test -race -coverprofile=coverage.out -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

      - name: Run Vet & Lint
        run: |
          cd pkg/consumer
          go vet .
          golint -set_exit_status=1 .

  build-container:
    name: Build Container
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt Secret
        run: ./scripts/decrypt_secret.sh
        env:
          SECRETS_PASSPHRASE: ${{ secrets.SECRETS_PASSPHRASE }}

      - name: Build Container
        run: make consumer-build
